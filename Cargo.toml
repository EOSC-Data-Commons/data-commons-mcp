[package]
name = "data-commons-mcp"
description = "A Model Context Protocol (MCP) server exposing an HTTP POST endpoint to access data from various open-access data publishers, developed for the EOSC Data Commons project."
version = "0.0.1"
authors = ["Vincent Emonet <vincent.emonet@gmail.com>"]
edition = "2024"
repository = "https://github.com/EOSC-Data-Commons/data-commons-mcp"
readme = "./README.md"
license-file = "LICENSE"
keywords = ["search", "llm", "mcp", "open data", "EOSC"]
categories = ["science", "data"]

[dependencies]
rmcp = { version = "0.5", features = [
    "server",
    "transport-streamable-http-server",
    "transport-sse-server",
    "client",
    "reqwest",
    "transport-streamable-http-client",
    "transport-child-process",
    "tower",
    # "auth"
] }
tokio = { version = "1", features = ["full"] }
tokio-stream = "0.1"
futures-util = "0.3"
async-stream = "0.3"
uuid = { version = "1.0", features = ["v4"] }
axum = { version = "0.8", features = ["macros"] }
axum-openapi3 = "0.2"
utoipa = { version = "5", features = ["macros", "axum_extras", "debug"] }
utoipa-swagger-ui = { version = "9", features = ["axum"] }
utoipa-axum = { version = "0.2" }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "std",
    "fmt",
] }
# llm = { version = "1.3", features = ["mistral"] }
llm = { git = "https://github.com/vemonet/llm", branch = "common-provider-openai-apis", default-features = false, features = [
    "mistral", "groq", "default-tls",
] }
opensearch = "2.3"
clap = { version = "4.5", features = ["derive", "env"] }
# schemars = { version = "1", features = ["derive"] }

[dev-dependencies]
reqwest = { version = "0.12", features = ["json"] }

[profile.release]
lto = true

[package.metadata.release]
tag-prefix = "v"
push = true
pre-release-hook = ["git-cliff", "-o", "CHANGELOG.md", "--tag", "{{version}}"]
# post-release-hook = ["bash", "-lc", "git add CHANGELOG.md && git diff-index --quiet HEAD || git commit --amend --no-edit"]


[package.metadata.git-cliff.git]
commit_parsers = [
    { message = "^feat", group = "⛰️ Features" },
    { message = "^fix", group = "🐛 Bug Fixes" },
    { message = "^doc", group = "📚 Documentation" },
    { message = "^perf|DataOriented", group = "⚡ Performance" },
    { message = "^refactor", group = "🚜 Refactor" },
    { message = "^style|Formatting", group = "🎨 Styling" },
    { message = "^test", group = "🧪 Testing" },
    { message = "^ci", group = "⚙️ Continuous Integration" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps\\)", skip = true },
    { message = "^chore\\(pr\\)", skip = true },
    { message = "^chore\\(pull\\)", skip = true },
    { message = "^chore", group = "🛠️ Miscellaneous Tasks" },
    { body = ".*security", group = "🛡️ Security" },
    { message = "^revert", group = "◀️ Revert" },
]
conventional_commits = true
filter_unconventional = true
split_commits = false
# Protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
filter_commits = false
tag_pattern = "v?[0-9].*"

# Sort the tags topologically
topo_order = false
sort_commits = "oldest"

[package.metadata.git-cliff.changelog]
header = """
# 📜 Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# Template for the changelog: https://keats.github.io/tera/docs
body = """
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}](<REPO>/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}](<REPO>/tree/{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first | trim }} - ([{{ commit.id | truncate(length=7, end="") }}](<REPO>/commit/{{ commit.id }}))\
    {% endfor %}
{% endfor %}\n
"""
trim = true
footer = """
<!-- generated by git-cliff -->
"""
postprocessors = [
    { pattern = '<REPO>', replace = "https://github.com/EOSC-Data-Commons/data-commons-mcp" },
]
